#include <bits/stdc++.h>  //submitted by taleb
using namespace std;
#define ll long long
const ll mod =1e9+7;
const ll N = 1e5+5;
void radix_sort(vector<pair<pair<int, int>, int>> &a) //optimization suing counting 
{
  int n = a.size();
  {
    vector<int> cnt(n, 0);
    for (auto i : a)
      cnt[i.F.S]++;
    vector<pair<pair<int, int>, int>> new_a(n);
    vector<int> p(n, 0);
    p[0] = 0;
    for (int i = 1; i < n; i++)
      p[i] = p[i - 1] + cnt[i - 1];
    for (auto i : a)
    {
      int x = i.F.S;
      new_a[p[x]] = i;
      p[x]++;
    }
    a = new_a;
  }

  {
    vector<int> cnt(n, 0);
    for (auto i : a)
      cnt[i.F.F]++;
    vector<pair<pair<int, int>, int>> new_a(n);
    vector<int> p(n, 0);
    p[0] = 0;
    for (int i = 1; i < n; i++)
      p[i] = p[i - 1] + cnt[i - 1];
    for (auto i : a)
    {
      int x = i.F.F;
      new_a[p[x]] = i;
      p[x]++;
    }
    a = new_a;
  }
}
int main()
{
   string s; cin>>s; s+='$';
   int n=s.length();
   vector<pair<char,int>>v(n);
   vector<int>p(n),c(n);
   {  // for k=0 
    for(int i=0; i<n; i++){ v[i]={s[i],i}; }
    sort(v.begin(), v.end());
    for(int i=0;i<n;i++)p[i]=v[i].S;
    c[p[0]]=0;
    for(int i=1;i<n;i++)
    {
      if(v[i].F==v[i-1].F){ c[p[i]]=c[p[i-1]];}
      else { c[p[i]]=c[p[i-1]]+1;}
    }
   }
   int k=0;
   vector<pair<pair<int,int>,int>>a(n);
   while((1<<k)<n)
   {
     for(int i=0;i<n;i++)
     {
      a[i]={{c[i],c[(i+(1<<k))%n]},i};
     }
      radix_sort(a);
      for(int i=0;i<n;i++)p[i]=a[i].S;
    c[p[0]]=0;
    for(int i=1;i<n;i++)
    {
      if(a[i].F==a[i-1].F){ c[p[i]]=c[p[i-1]];}
      else { c[p[i]]=c[p[i-1]]+1;}
    }
    k++;
   }
 
  int q;
  cin>>q;
  while(q--)
  {
    string qs; cin>>qs;
    int l=0,r=n-1,m;
    bool ok=0;
     while (l <= r) {
        int m = (l + r) / 2;
        int cmp = s.compare(p[m], qs.size(), qs);  //binary search to check a substring present or not
        if (cmp == 0) { ok=1; break;}
        if (cmp < 0)
            l = m + 1;
        else
            r = m - 1;
    }
 cout<<(ok?"Yes":"No")<<endl;
}
}
