struct BIT{
  int n;
  vector<ll>sum;
 BIT(int _n)
 {
  n=_n;  sum.resize(n+1,0);
 }
  void update(int x,int value)
{
  int idx=x;
  while(idx<=n)
  {
    sum[idx]+=value;
    idx+= idx & -idx;
  }
}
ll query(int x)
{
  int idx=x,cur=0;
  while(idx>0)
  {
     cur+=sum[idx];
     idx-= idx & -idx;
  }
  return cur;
}
int findByOrder(int k)
{
  int idx=0;
  int bitmask= 1<<(31-__builtin_clz(n));
  for(;bitmask>0; bitmask >>=1)
  {
    int nxt=idx+bitmask;
    if(nxt <=n  && sum[nxt]<k)
    {
      idx=nxt;
      k-=sum[nxt];
    }
  }
  return idx+1;
}
};
