struct segment_tree
{
  int n;
  vector<ll>sum;
 segment_tree(int n) : n(n),sum(4*n+1,0) {}
 void build(int node,int l,int r)
{
  if(l==r) { sum[node]=a[l]; return; }
  int  mid=(l+r)>>1,left=2*node,right=2*node+1;
  build(left,l,mid);
  build(right,mid+1,r);
  sum[node]=sum[left]+sum[right]; 
}
ll query(int node,int l,int r,int ql,int qr)
{
  if(ql > r or qr < l) return 0LL;
  if(l>=ql and r<=qr) return sum[node];
  int  mid=(l+r)>>1,left=2*node,right=2*node+1;
  ll cur= query(left,l,mid,ql,qr)+query(right,mid+1,r,ql,qr);
  return cur;
}
void update(int node,int l,int r,int idx,int val)
{
    if(l==r) { sum[node] += val; return;}
    int  mid=(l+r)>>1,left=2*node,right=2*node+1;
    if(idx <= mid) update(left,l,mid,idx,val);
    else update(right,mid+1,r,idx,val);
    sum[node] = sum[left]+sum[right];
}
};
